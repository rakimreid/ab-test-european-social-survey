{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "y2eIJRGCFivx"
   },
   "source": [
    "# European social survey"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 510
    },
    "id": "FYICcqNhkBZ5",
    "outputId": "1b2fc28f-40af-424f-930c-2115f9ee373b"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 8147 entries, 0 to 8146\n",
      "Data columns (total 13 columns):\n",
      "cntry      8147 non-null object\n",
      "idno       8147 non-null int64\n",
      "year       8147 non-null int64\n",
      "tvtot      8147 non-null int64\n",
      "ppltrst    8147 non-null int64\n",
      "pplfair    8147 non-null int64\n",
      "pplhlp     8147 non-null int64\n",
      "happy      8147 non-null int64\n",
      "sclmeet    8147 non-null int64\n",
      "sclact     8147 non-null int64\n",
      "gndr       8147 non-null int64\n",
      "agea       8147 non-null int64\n",
      "partner    8147 non-null int64\n",
      "dtypes: int64(12), object(1)\n",
      "memory usage: 827.5+ KB\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cntry</th>\n",
       "      <th>idno</th>\n",
       "      <th>year</th>\n",
       "      <th>tvtot</th>\n",
       "      <th>ppltrst</th>\n",
       "      <th>pplfair</th>\n",
       "      <th>pplhlp</th>\n",
       "      <th>happy</th>\n",
       "      <th>sclmeet</th>\n",
       "      <th>sclact</th>\n",
       "      <th>gndr</th>\n",
       "      <th>agea</th>\n",
       "      <th>partner</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>CH</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>10</td>\n",
       "      <td>5</td>\n",
       "      <td>8</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>60</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>CH</td>\n",
       "      <td>25</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>5</td>\n",
       "      <td>7</td>\n",
       "      <td>5</td>\n",
       "      <td>9</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>59</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>CH</td>\n",
       "      <td>26</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "      <td>7</td>\n",
       "      <td>6</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>24</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>CH</td>\n",
       "      <td>28</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>7</td>\n",
       "      <td>10</td>\n",
       "      <td>6</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>64</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>CH</td>\n",
       "      <td>29</td>\n",
       "      <td>6</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>7</td>\n",
       "      <td>5</td>\n",
       "      <td>8</td>\n",
       "      <td>7</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>55</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  cntry  idno  year  tvtot  ppltrst  ...  sclmeet  sclact  gndr  agea  partner\n",
       "0    CH     5     6      3        3  ...        5       4     2    60        1\n",
       "1    CH    25     6      6        5  ...        3       2     2    59        1\n",
       "2    CH    26     6      1        8  ...        6       3     1    24        2\n",
       "3    CH    28     6      4        6  ...        6       2     2    64        1\n",
       "4    CH    29     6      5        6  ...        7       2     2    55        1\n",
       "\n",
       "[5 rows x 13 columns]"
      ]
     },
     "execution_count": 1,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Import packages\n",
    "\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import scipy.stats as stats\n",
    "%matplotlib inline\n",
    "\n",
    "\n",
    "ess_combined = pd.read_csv(\"https://tf-assets-prod.s3.amazonaws.com/tf-curric/data-science/ess_combined_2012_2014.csv\")\n",
    "ess_combined.info()\n",
    "ess_combined.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 289
    },
    "id": "G5J-jjwxE9YG",
    "outputId": "59b90d53-8dc5-4565-c8de-ed213c81027a"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  cntry  idno  year  tvtot  ppltrst  ...  sclmeet  sclact  gndr  agea  partner\n",
      "0    CH     5     6      3        3  ...        5       4     2    60        1\n",
      "1    CH    25     6      6        5  ...        3       2     2    59        1\n",
      "2    CH    26     6      1        8  ...        6       3     1    24        2\n",
      "3    CH    28     6      4        6  ...        6       2     2    64        1\n",
      "4    CH    29     6      5        6  ...        7       2     2    55        1\n",
      "\n",
      "[5 rows x 13 columns]\n",
      "    cntry  idno  year  tvtot  ppltrst  ...  sclmeet  sclact  gndr  agea  partner\n",
      "732    CH     5     7      2        8  ...        6       4     1    69        1\n",
      "733    CH    25     7      4        4  ...        5       3     1    30        1\n",
      "734    CH    26     7      3        8  ...        7       5     2    49        2\n",
      "735    CH    28     7      2        7  ...        6       2     1    51        1\n",
      "736    CH    29     7      2        4  ...        6       2     2    32        2\n",
      "\n",
      "[5 rows x 13 columns]\n"
     ]
    }
   ],
   "source": [
    "# Split into two DataFrames for ease of analysis\n",
    "\n",
    "ess_2012 = ess_combined[ess_combined['year']==6]\n",
    "\n",
    "ess_2014 = ess_combined[ess_combined['year']==7]\n",
    "\n",
    "print(ess_2012.head())\n",
    "print(ess_2014.head())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "7cvmEaXMqXDF"
   },
   "source": [
    "###1. Did people become less trusting from 2012 to 2014? \n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 323
    },
    "id": "D4Ezb-w3JyPZ",
    "outputId": "da9fcb09-fc39-4bcd-a844-c43936386614"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "DescribeResult(nobs=4071, minmax=(0, 10), mean=5.578481945467944, variance=4.893040545067073, skewness=-0.5431086926347095, kurtosis=-0.1210956960964813)\n",
      "DescribeResult(nobs=4076, minmax=(0, 10), mean=5.5713935230618254, variance=4.927171652708959, skewness=-0.4601859476512641, kurtosis=-0.25006786100787215)\n"
     ]
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAXoAAAD8CAYAAAB5Pm/hAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDMuMC4zLCBo\ndHRwOi8vbWF0cGxvdGxpYi5vcmcvnQurowAAElRJREFUeJzt3X+snuV93/H3ZzikCZ0wP84salsz\nUtxEqFIIPcrMmKqCmynQKvYfCSPagodceX+wNkk7tdB/okmVQqSsLtEmJCtOa7oshLmJbGUoq2Wo\nqknAevgxkkASTl3A9gw+JeC0QVnK+t0fz+Xl4Jqc5/ic59ycy++XdPRc93Vf93N9b4E+5z6X7+e5\nU1VIkvr1D4YuQJI0WQa9JHXOoJekzhn0ktQ5g16SOmfQS1LnDHpJ6pxBL0mdM+glqXNrhi4A4PLL\nL69NmzYNXYYkrSqPPfbYX1XV1ELj3hJBv2nTJmZmZoYuQ5JWlSTPjzPOpRtJ6pxBL0mdM+glqXMG\nvSR1zqCXpM4Z9JLUOYNekjpn0EtS5wx6SercW+KTsdJb1kOfHm7u6+8cbm51xSt6SeqcQS9JnRtr\n6SbJJ4FfBQr4BnAbcAVwH3AZ8Bjwsar6UZK3A/cCPw+8DPyLqnpu+UuXNAm7D313sLk/+YGfHWzu\nni14RZ9kPfDrwHRV/RxwAXAL8Blgd1W9C3gF2NkO2Qm80vp3t3GSpIGMu3SzBnhHkjXAO4ETwA3A\n/rZ/H7C9tbe1bdr+rUmyPOVKkhZrwaCvquPAZ4EXGAX8KUZLNa9W1ett2DFgfWuvB462Y19v4y87\n832T7Eoyk2Rmbm5uqechSXoT4yzdXMLoKv1K4GeAi4APLnXiqtpTVdNVNT01teADUiRJ52icpZtf\nAv6yquaq6m+BrwDXAWvbUg7ABuB4ax8HNgK0/Rcz+kdZSdIAxgn6F4AtSd7Z1tq3Ak8DDwEfbmN2\nAAda+2Dbpu1/sKpq+UqWJC3GgrdXVtWjSfYDjwOvA08Ae4D/BtyX5Hdb3952yF7gj5LMAt9jdIeO\ntCo9fGS4P0avvX6wqdWZse6jr6pPAZ86o/sI8P6zjP0h8JGllyZJWg5+MlaSOmfQS1LnDHpJ6pxB\nL0mdM+glqXM+eETSG2x5Yc+As392wLn75RW9JHXOoJekzhn0ktQ5g16SOmfQS1LnDHpJ6pxBL0md\nM+glqXMGvSR1zqCXpM6N83Dwdyd5ct7P95N8IsmlSQ4leba9XtLGJ8nnkswmeSrJNZM/DUnSm1kw\n6KvqO1V1dVVdDfw88BrwVeAO4HBVbQYOt22AG4HN7WcXcM8kCpckjWexSzdbgb+oqueBbcC+1r8P\n2N7a24B7a+QRYG2SK5alWknSoi026G8BvtTa66rqRGu/CKxr7fXA0XnHHGt9b5BkV5KZJDNzc3OL\nLEOSNK6xgz7JhcCHgP965r6qKqAWM3FV7amq6aqanpqaWsyhkqRFWMwV/Y3A41X1Utt+6fSSTHs9\n2fqPAxvnHbeh9UmSBrCYoP8oP162ATgI7GjtHcCBef23trtvtgCn5i3xSJJW2FhPmEpyEfAB4N/M\n674LuD/JTuB54ObW/wBwEzDL6A6d25atWknSoo0V9FX1A+CyM/peZnQXzpljC7h9WaqTJC2Zn4yV\npM4Z9JLUOYNekjpn0EtS5wx6SeqcQS9JnTPoJalzBr0kdc6gl6TOGfSS1DmDXpI6Z9BLUucMeknq\n3FjfXilJK+KhTw8z7/V3DjPvCvGKXpI65xW9pLeMh4+8PMi8114/yLQrZqwr+iRrk+xP8u0kzyS5\nNsmlSQ4leba9XtLGJsnnkswmeSrJNZM9BUnSTzLu0s3dwNer6j3Ae4FngDuAw1W1GTjctmH0EPHN\n7WcXcM+yVixJWpQFgz7JxcAvAHsBqupHVfUqsA3Y14btA7a39jbg3hp5BFib5Iplr1ySNJZxruiv\nBOaAP0jyRJLPt4eFr6uqE23Mi8C61l4PHJ13/LHW9wZJdiWZSTIzNzd37mcgSfqJxgn6NcA1wD1V\n9T7gB/x4mQb4/w8Er8VMXFV7qmq6qqanpqYWc6gkaRHGCfpjwLGqerRt72cU/C+dXpJpryfb/uPA\nxnnHb2h9kqQBLBj0VfUicDTJu1vXVuBp4CCwo/XtAA609kHg1nb3zRbg1LwlHknSChv3PvpfA76Y\n5ELgCHAbo18S9yfZCTwP3NzGPgDcBMwCr7WxkqSBjBX0VfUkMH2WXVvPMraA25dYlyRpmfgVCJLU\nOYNekjpn0EtS5wx6SeqcQS9JnTPoJalzBr0kdc6gl6TOGfSS1DmDXpI6Z9BLUud8OLj0FrX70HcH\nmXfLILNqkryil6TOGfSS1DmDXpI65xq99Ba15YU9Q5egTox1RZ/kuSTfSPJkkpnWd2mSQ0meba+X\ntP4k+VyS2SRPJblmkicgSfrJFrN0c31VXV1Vp580dQdwuKo2A4fbNsCNwOb2swu4Z7mKlSQt3lLW\n6LcB+1p7H7B9Xv+9NfIIsDbJFUuYR5K0BOMGfQF/kuSxJLta37qqOtHaLwLrWns9cHTescda3xsk\n2ZVkJsnM3NzcOZQuSRrHuP8Y+8+q6niSfwQcSvLt+TurqpLUYiauqj3AHoDp6elFHStJGt9YV/RV\ndby9ngS+CrwfeOn0kkx7PdmGHwc2zjt8Q+uTJA1gwaBPclGSf3i6Dfxz4JvAQWBHG7YDONDaB4Fb\n2903W4BT85Z4JEkrbJylm3XAV5OcHv9fqurrSf4cuD/JTuB54OY2/gHgJmAWeA24bdmrliSNbcGg\nr6ojwHvP0v8ysPUs/QXcvizVSZKWzK9AkKTOGfSS1DmDXpI6Z9BLUucMeknqnEEvSZ0z6CWpcwa9\nJHXOoJekzhn0ktQ5g16SOmfQS1LnDHpJ6pxBL0mdM+glqXMGvSR1buygT3JBkieSfK1tX5nk0SSz\nSb6c5MLW//a2Pdv2b5pM6ZKkcSzmiv7jwDPztj8D7K6qdwGvADtb/07glda/u42TJA1krKBPsgH4\nZeDzbTvADcD+NmQfsL21t7Vt2v6tbbwkaQDjXtH/PvBbwN+17cuAV6vq9bZ9DFjf2uuBowBt/6k2\nXpI0gAWDPsmvACer6rHlnDjJriQzSWbm5uaW860lSfOMc0V/HfChJM8B9zFasrkbWJtkTRuzATje\n2seBjQBt/8XAy2e+aVXtqarpqpqemppa0klIkt7cgkFfVXdW1Yaq2gTcAjxYVf8SeAj4cBu2AzjQ\n2gfbNm3/g1VVy1q1JGlsS7mP/reB30gyy2gNfm/r3wtc1vp/A7hjaSVKkpZizcJDfqyq/hT409Y+\nArz/LGN+CHxkGWqTJC0DPxkrSZ0z6CWpc4taupGG8vDefzd0CdKq5RW9JHXOoJekzhn0ktQ51+i1\nKLsPfXeQebcMMqvUB6/oJalzBr0kdc6gl6TOGfSS1DmDXpI6Z9BLUue8vVKLsuWFPUOXIGmRvKKX\npM4Z9JLUuXEeDv5TSf5nkv+V5FtJ/n3rvzLJo0lmk3w5yYWt/+1te7bt3zTZU5Ak/STjXNH/H+CG\nqnovcDXwwSRbgM8Au6vqXcArwM42fifwSuvf3cZJkgYyzsPBq6r+pm2+rf0UcAOwv/XvA7a39ra2\nTdu/NUmWrWJJ0qKMtUaf5IIkTwIngUPAXwCvVtXrbcgxYH1rrweOArT9pxg9PFySNICxgr6q/m9V\nXQ1sYPRA8PcsdeIku5LMJJmZm5tb6ttJkt7Eou66qapXgYeAa4G1SU7fh78BON7ax4GNAG3/xcDL\nZ3mvPVU1XVXTU1NT51i+JGkh49x1M5VkbWu/A/gA8AyjwP9wG7YDONDaB9s2bf+DVVXLWbQkaXzj\nfDL2CmBfkgsY/WK4v6q+luRp4L4kvws8Aext4/cCf5RkFvgecMsE6pYkjWnBoK+qp4D3naX/CKP1\n+jP7fwh8ZFmqkyQtmZ+MlaTOGfSS1DmDXpI6Z9BLUucMeknqnEEvSZ0z6CWpcwa9JHXOoJekzhn0\nktQ5g16SOjfOl5pJUt8e+vRwc19/58Sn8Ipekjpn0EtS51y6WY2G/DNT0qrjFb0kdW7BK/okG4F7\ngXVAAXuq6u4klwJfBjYBzwE3V9UrSQLcDdwEvAb866p6fDLlS9LSPXzk7z3WesVce/3k5xjniv51\n4Der6ipgC3B7kquAO4DDVbUZONy2AW4ENrefXcA9y161JGlsCwZ9VZ04fUVeVX/N6MHg64FtwL42\nbB+wvbW3AffWyCPA2iRXLHvlkqSxLGqNPskmRs+PfRRYV1Un2q4XGS3twOiXwNF5hx1rfZKkAYwd\n9El+Gvhj4BNV9f35+6qqGK3fjy3JriQzSWbm5uYWc6gkaRHGCvokb2MU8l+sqq+07pdOL8m015Ot\n/ziwcd7hG1rfG1TVnqqarqrpqampc61fkrSABYO+3UWzF3imqn5v3q6DwI7W3gEcmNd/a0a2AKfm\nLfFIklbYOB+Yug74GPCNJE+2vt8B7gLuT7ITeB64ue17gNGtlbOMbq+8bVkrliQtyoJBX1X/A8ib\n7N56lvEF3L7EuiRJy8SvQFiFhvxwh6TVx69AkKTOGfSS1DmDXpI6Z9BLUucMeknqnEEvSZ0z6CWp\ncwa9JHXOoJekzq36T8buPvTdweb+5Ad+drC5JWlcXtFLUucMeknqnEEvSZ0z6CWpcwa9JHVunEcJ\nfiHJySTfnNd3aZJDSZ5tr5e0/iT5XJLZJE8luWaSxUuSFjbO7ZV/CPxH4N55fXcAh6vqriR3tO3f\nBm4ENreffwLc014nZssLeyb59gv47IBzS9J4Fryir6o/A753Rvc2YF9r7wO2z+u/t0YeAdYmuWK5\nipUkLd65rtGvq6oTrf0isK611wNH54071vokSQNZ8j/GtoeB12KPS7IryUySmbm5uaWWIUl6E+ca\n9C+dXpJprydb/3Fg47xxG1rf31NVe6pquqqmp6amzrEMSdJCzjXoDwI7WnsHcGBe/63t7pstwKl5\nSzySpAEseNdNki8BvwhcnuQY8CngLuD+JDuB54Gb2/AHgJuAWeA14LYJ1PzW8dCnh65Akha0YNBX\n1UffZNfWs4wt4PalFiVJWj5+MlaSOmfQS1LnDHpJ6tyqf8LUkB4+8vLQJUjSgryil6TOGfSS1DmD\nXpI6Z9BLUucMeknqnEEvSZ0z6CWpcwa9JHXOoJekzhn0ktQ5g16SOmfQS1LnJhL0ST6Y5DtJZpPc\nMYk5JEnjWfagT3IB8J+AG4GrgI8muWq555EkjWcSV/TvB2ar6khV/Qi4D9g2gXkkSWOYRNCvB47O\n2z7W+iRJAxjswSNJdgG72ubfJPnOOb7V5cBfLU9Vq4bnfH7wnM8Hv/oflnLO/3icQZMI+uPAxnnb\nG1rfG1TVHmDPUidLMlNV00t9n9XEcz4/eM7nh5U450ks3fw5sDnJlUkuBG4BDk5gHknSGJb9ir6q\nXk/yb4H/DlwAfKGqvrXc80iSxjORNfqqegB4YBLvfRZLXv5ZhTzn84PnfH6Y+DmnqiY9hyRpQH4F\ngiR1blUH/fn2VQtJNiZ5KMnTSb6V5OND17QSklyQ5IkkXxu6lpWQZG2S/Um+neSZJNcOXdOkJflk\n+3/6m0m+lOSnhq5puSX5QpKTSb45r+/SJIeSPNteL5nE3Ks26M/Tr1p4HfjNqroK2ALcfh6cM8DH\ngWeGLmIF3Q18vareA7yXzs89yXrg14Hpqvo5Rjdx3DJsVRPxh8AHz+i7AzhcVZuBw2172a3aoOc8\n/KqFqjpRVY+39l8zCoCuP3WcZAPwy8Dnh65lJSS5GPgFYC9AVf2oql4dtqoVsQZ4R5I1wDuB/z1w\nPcuuqv4M+N4Z3duAfa29D9g+iblXc9Cf11+1kGQT8D7g0WErmbjfB34L+LuhC1khVwJzwB+05arP\nJ7lo6KImqaqOA58FXgBOAKeq6k+GrWrFrKuqE639IrBuEpOs5qA/byX5aeCPgU9U1feHrmdSkvwK\ncLKqHhu6lhW0BrgGuKeq3gf8gAn9Of9W0daltzH6JfczwEVJ/tWwVa28Gt0COZHbIFdz0I/1VQu9\nSfI2RiH/xar6ytD1TNh1wIeSPMdoae6GJP952JIm7hhwrKpO/6W2n1Hw9+yXgL+sqrmq+lvgK8A/\nHbimlfJSkisA2uvJSUyymoP+vPuqhSRhtHb7TFX93tD1TFpV3VlVG6pqE6P/vg9WVddXelX1InA0\nybtb11bg6QFLWgkvAFuSvLP9P76Vzv8Bep6DwI7W3gEcmMQkg3175VKdp1+1cB3wMeAbSZ5sfb/T\nPomsfvwa8MV2AXMEuG3geiaqqh5Nsh94nNGdZU/Q4Sdkk3wJ+EXg8iTHgE8BdwH3J9kJPA/cPJG5\n/WSsJPVtNS/dSJLGYNBLUucMeknqnEEvSZ0z6CWpcwa9JHXOoJekzhn0ktS5/we3s+PLR/oORgAA\nAABJRU5ErkJggg==\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "tags": []
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(ess_2012['ppltrst'], alpha = .5)\n",
    "plt.hist(ess_2014['ppltrst'], alpha = .5)\n",
    "\n",
    "# Remember that Shapiro test is sensitive to large samples. \n",
    "\n",
    "stats.shapiro(ess_2012['ppltrst'])\n",
    "stats.shapiro(ess_2014['ppltrst'])\n",
    "\n",
    "print(stats.describe(ess_2012['ppltrst']))\n",
    "print(stats.describe(ess_2014['ppltrst']))\n",
    "\n",
    "\n",
    "# This is normally distributed."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 34
    },
    "id": "2FGZMx6x8Awo",
    "outputId": "bac7a38d-f1fa-4267-815a-5f6def27115b"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Ttest_indResult(statistic=0.1443685081969842, pvalue=0.8852130548889106)"
      ]
     },
     "execution_count": 4,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "stats.ttest_ind(ess_2012['ppltrst'], ess_2014['ppltrst'])\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "Ekt9eFvwGBBB"
   },
   "source": [
    "Fail to reject the null -- there is no significant difference in trust between 2012 to 2014."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "K91q_RnDqdcs"
   },
   "source": [
    "### 2. Did people become happier from 2012 to 2014? \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 323
    },
    "id": "XVZhT2DyKJ48",
    "outputId": "715d9bf9-4630-4950-cf1c-85faab0521e2"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "DescribeResult(nobs=4071, minmax=(0, 10), mean=7.731515598133137, variance=3.0819524689826823, skewness=-1.1505518232802756, kurtosis=1.9055890346061979)\n",
      "DescribeResult(nobs=4076, minmax=(0, 10), mean=7.6854759568204125, variance=2.840436853164115, skewness=-1.0296465664009635, kurtosis=1.5218046596567287)\n"
     ]
    },
    {
     "data": {
      "image/png": "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\nRU5ErkJggg==\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "tags": []
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Variable happy\n",
    "\n",
    "plt.hist(ess_2012['happy'], alpha = .5)\n",
    "plt.hist(ess_2014['happy'], alpha = .5)\n",
    "\n",
    "print(stats.describe(ess_2012['happy']))\n",
    "print(stats.describe(ess_2014['happy']))\n",
    "\n",
    "# Not normally distributed"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 34
    },
    "id": "ZRYm_TEWt4uL",
    "outputId": "d1a62dbb-4f8b-44e8-b621-a2d6b3cad738"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "KruskalResult(statistic=3.725441202182227, pvalue=0.05358946830655459)"
      ]
     },
     "execution_count": 6,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Because not normally distributed\n",
    "# We will use Kruskal-Wallis\n",
    "\n",
    "stats.kruskal(\n",
    "    ess_2012['happy'],\n",
    "    ess_2014['happy'])\n",
    "\n",
    "# p-value is right at the cut-off. Based on visual inspection I will fail \n",
    "# to reject the null and conclude that all data samples\n",
    "# are drawn from the same distribution."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "23UNPEwxqiy0"
   },
   "source": [
    "\n",
    "### 3. Pick three or four of the countries in the sample and compare how often people met socially in 2014. Are there differences, and if so, which countries stand out?\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 34
    },
    "id": "3bXOktNy2eLJ",
    "outputId": "9d132983-a604-4800-fa9d-c69b7b4ce189"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['CH', 'CZ', 'DE', 'ES', 'NO', 'SE'], dtype=object)"
      ]
     },
     "execution_count": 7,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# How many unique countries are there?\n",
    "\n",
    "ess_2014['cntry'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 361
    },
    "id": "kHHXvNRCqlpz",
    "outputId": "b02b2588-0777-4c69-e152-9d067fa317a1"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[<matplotlib.axes._subplots.AxesSubplot object at 0x7f23892b0c88>,\n",
       "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f23892901d0>],\n",
       "       [<matplotlib.axes._subplots.AxesSubplot object at 0x7f2389235748>,\n",
       "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f238925dcc0>]],\n",
       "      dtype=object)"
      ]
     },
     "execution_count": 8,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\nA/pZuaQxG2jyAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<Figure size 432x288 with 4 Axes>"
      ]
     },
     "metadata": {
      "tags": []
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# I am going to pick CZ, DE and ES\n",
    "\n",
    "filter_list = ['CZ', 'DE', 'ES']\n",
    "ess_2014_cz_de_es = ess_2014[ess_2014['cntry'].isin(filter_list)]\n",
    "\n",
    "ess_2014_cz_de_es['cntry'].unique()\n",
    "\n",
    "ess_2014_cz_de_es['sclmeet'].hist(by = ess_2014_cz_de_es['cntry'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 34
    },
    "id": "gU2aLfis9Yz6",
    "outputId": "0c4a1384-2bb7-4366-ff5f-8926592d580c"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "KruskalResult(statistic=120.72958033262947, pvalue=6.0800161031835895e-27)"
      ]
     },
     "execution_count": 9,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# these are sparser samples of ordinal data\n",
    "# so nothing will be perfectly \"normal,\"\n",
    "# we will have to \"eyeball\" it.\n",
    "# we will do a Kruskal Wallis test\n",
    "\n",
    "stats.kruskal(\n",
    "    ess_2014_cz_de_es.loc[ess_2014_cz_de_es['cntry'] == 'CZ',['sclmeet']],\n",
    "    ess_2014_cz_de_es.loc[ess_2014_cz_de_es['cntry'] == 'DE',['sclmeet']],\n",
    "    ess_2014_cz_de_es.loc[ess_2014_cz_de_es['cntry'] == 'ES',['sclmeet']])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 437
    },
    "id": "yTQIWC9N9woo",
    "outputId": "d0f92384-3c23-4ade-a952-6f93ebf949f4"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7f2394fe6978>"
      ]
     },
     "execution_count": 10,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAl8AAAGTCAYAAAAWfXdPAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDMuMC4zLCBo\ndHRwOi8vbWF0cGxvdGxpYi5vcmcvnQurowAAG29JREFUeJzt3XuUZXdZ5+HvCwkBOpFw7RjA9HCR\nQRACtrdBsZuIIomXpVxFBEZtncEII46A4ngjCDNLFAEHIzKEa4iBRDSawdEUCEK0GxIkBNYIJJMQ\nFEISkm4gQHjnj7Mbi6a6q5Lu+p2uqudZq1Z31d5n7/ecnJz+rL13nVPdHQAAxrjVvAcAANhIxBcA\nwEDiCwBgIPEFADCQ+AIAGEh8AQAMJL6AJVXVq6vq+fOeY94O9DhU1VOr6p2jZwLWNvEFh7mquqyq\nPldVu6vq2qo6r6ruOe+5Fquqrqr7zHuOjUgkw9ojvmBt+MHuPjrJ1yf51yQvnfM8q6ZmvDYdIlV1\nxLxnAL6aFzhYQ7r780nOTvJNe39WVXeoqtdU1aeq6vKqet7eeKmq/1lVb1607ouq6m+mwNlWVVdW\n1a9U1dXTEbYn7W/fVfUzVfXPVXVNVb21qo6ffv6OaZWLp6Nzj1/itreuqt+d9vOxqvr56WjZEdPy\nhao6rareleSzSe5VVcdP+7lm2u/PLNreVx3t2XtfFn1/WVU9t6o+OB0t/F9VddtFy0+pqouq6rqq\n+vuqetCiZQ+pqvdW1Q1V9aYkX7nd/h+aellVfaaqPlRVJ00/fGxV7dpnxV+sqj/bz0buNM151TTz\nuYvvW1U9q6o+WVWfqKqnTct2JHlSkl+eHvs/X3T/n11V70+yp6r+6+LnwbTOH1TVS5a5b8AqEF+w\nhlTV7ZM8Psl7Fv34pUnukOReSb4nyU8medq07FlJvnm6Num7k/xUkqf0v32u2HFJ7pLk7kmekuT0\nqrrfEvt9RJLfSfK4zI6+XZ7kzCTp7odPqz24u4/u7jctMfrPJPmBJCcmeWiSH1linScn2ZHkmEXb\nvzLJ8Ukek+QF0xwr9aQk35/k3km+McnzpvvykCSvSvKzSe6c5I+SvLWqjqqq2yQ5N8lrk9wpyZ8m\n+bFl9vPtST6S2eP460neUlV3SvLWJP+uqu6/z318zX6289okt0/ygCR3S/J7i5Ydl9l/47tn9t/w\n5VV1x+4+Pcnrk/z36bH/wUW3eWKSk5Mcm+R1SR5VVcdOj8ERSZ5wgFmAVSS+YG04t6quS/KZJI9M\n8j+S2RGlzP4RfW5339DdlyX53cz+kU93f3b6+4sz+wf41O6+cp9t/1p339jdb09yXmaBta8nJXlV\nd7+3u29M8twk31lVW1Y4/+OSvKS7r+zua5O8cIl1Xt3dl3T3lzKLjYcleXZ3f767L0ryyszCcqVe\n1t1XdPc1SU7LLEaSWeD9UXdf2N03dfcZSW5M8h3T15FJfr+7v9jdZyf5x2X288lF678pyYeTnDw9\nTm9K8hNJUlUPSLIlyV/su4Gq+vrM4vTnuvvaaVtvX7TKF5P81vTzv0yyO8nXRPI+/mC6/5/r7k8k\neUeSx07LHpXk6u7etf+bA6tFfMHa8CPdfWxmp8B+Psnbq2rvUasjMztStNflmR0hSZJ094VJPpqk\nkpy1z3av7e49+9z2+CX2f/zifXT37iSfXryfZRyf5IpF31+xxDqLf3Z8kmu6+4Z9Zlvp/vbd3uL7\ndUKSZ02nHK+bovae0/Ljk3x80ZHBvbc9kKXW37uvM5L8eFVVZhF81hRl+7pnZvf32v3s49NTlO71\n2SRHLzPXvo/xGZlCcPrztcvcHlgl4gvWkOlIzVuS3JTku5JcndlRkRMWrfYNST6+95uqenqSo5Jc\nleSX99nkHatq0z63vWqJXV+1eB/Tbe68eD/L+ESSeyz6fqnf1lwcMFcluVNVHbPPbHv3tyezU3R7\nHbfE9hbvY/H9uiLJad197KKv23f3G6c57z7F0uLbHshS61+VJN39niRfSPLdSX48+w+eKzK7v8cu\ns6+l9Ap/fm6SB1XVA5OcktnpSmAOxBesIdOF8j+c5I5JLu3umzI7mnVaVR1TVSck+cXMTjGmqr4x\nyfMzO9Lx5MwuzD5xn83+ZlXdZrom7JTMrnPa1xuTPK2qTqyqo5K8IMmF02nOZPYbmPc6wOhnJXlG\nVd19CoxnH+h+dvcVSf4+ye9U1W2nC+J/au/9SnJRkkdPF6kfl+SZS2zm6VV1j+n6q1/N7BRgkvxx\nkp+rqm+fHs9NVXXyFHrvTvKlJL9QVUdW1Y8m+bYDzZrZ9Vl7139skvsn+ctFy1+T5GVJvtjdS74n\n2HRa8K+S/GFV3XHa1sOXWncJyz32e/ex95c13pDkH7r7/61w+8AhJr5gbfjzqtqd5PrMrl96Sndf\nMi07NbMjQR9N8s7M/nF91XRR9euSvKi7L+7u/5vkV5K8dgqoJPmXJNdmdqTm9Zldc/ShfXfe3f8n\nya8leXNmR4fundm1Znv9RpIzptN4S10z9sdJ3pbk/Unel1mcfCmzI3j788TMrpG6Ksk5SX59miOZ\nHUG6OMll03aXusj/DdOyj2Z2Qfzzp/uyM7NfAHjZdN//OclTp2VfSPKj0/fXZPbLDW85wIxJcmGS\n+2Z2FPK0JI/p7k8vWv7aJA/Mv4Xj/jw5s6OYH8rsOrKlgnIpf5Lkm6bH/txl1j0jyTfHKUeYq/rq\nSxWAjaKqtiV5XXffY7l1V2HfP5DkFd19wrIr37LtX5bkpxfF2txU1e0yi6mHTgE8z1m+IbO4O667\nr5/nLLCROfIFrLqqul1VPbqqjqiqu2f2lgznzHuuQf5Tkn88DMLrVpmdkj5TeMF8eedjYIRK8puZ\nnR78XGZvafHf5jrRANMRuMrS72s2co5NmV0bdnlmbzMBzJHTjgAAAzntCAAwkPgCABhIfAEADCS+\nAAAGEl8AAAOJL2BNqKquqvvMew6AgyW+APajqrZM0ec9EYFDRnwBAAwkvoC5qKpnV9XHq+qGqvpw\nVZ1UVbeuql+pqo9MP99VVfdc4ravrqo/rKq/qqrdVfWuqjquqn6/qq6tqg9V1UMWrX98Vb25qj5V\nVR+rql9YtOxWVfWcaZ+frqqzqupO0+J3TH9eN+3nO1f3UQE2AvEFDFdV90vy80m+tbuPSfL9SS7L\n7LMHn5jk0Um+Lsl/TPLZ/WzmcUmel+QuSW5M8u4k752+PzvJi6d93SrJnye5OMndk5yU5JlV9f3T\ndk7N7ON/vifJ8UmuTfLyadnDpz+P7e6ju/vdB3nXAcQXMBc3JTkqyTdV1ZHdfVl3fyTJTyd5Xnd/\nuGcu7u5P72cb53T3ru7+fGYf0v357n5Nd9+U2WdI7j3y9a1J7trdv9XdX+jujyb54yRPmJb/XJJf\n7e4ru/vGJL+R5DGu8wJWixcXYLju/ueqemZmofOAqvrfmR31umeSj6xwM/+66O+fW+L7o6e/n5Dk\n+Kq6btHyWyf5u0XLz6mqLy9aflOSzSucA+BmceQLmIvufkN3f1dm8dNJXpTkiiT3PsS7uiLJx7r7\n2EVfx3T3oxct/4F9lt+2uz8+zQVwSIkvYLiqul9VPaKqjkry+cyOVH05ySuT/HZV3bdmHlRVdz7I\n3f1DkhumC/xvN13U/8Cq+tZp+SuSnFZVJ0yz3bWqfnha9qlprnsd5AwAXyG+gHk4KskLk1yd5F+S\n3C3JczO7SP6sJG9Lcn2SP0lyu4PZ0XQN2ClJTkzysWmfr0xyh2mVlyR5a5K3VdUNSd6T5Nun2342\nyWlJ3lVV11XVdxzMLABJUt2OqgMAjOLIFwDAQOILAGAg8QUAMJD4AgAYaFXeZPUud7lLb9myZTU2\nzQrs2bMnmzZtmvcYMBee/2xknv/ztWvXrqu7+67Lrbcq8bVly5bs3LlzNTbNCiwsLGTbtm3zHgPm\nwvOfjczzf76q6vKVrOe0IwDAQOILAGAg8QUAMJD4AgAYSHwBAAwkvgAABhJfAAADiS8AgIHEFwDA\nQMvGV1Xdr6ouWvR1fVU9c8RwAADrzbIfL9TdH05yYpJU1a2TfDzJOas8FwDAunRzTzuelOQj3b2i\nzy4CAOCr3dz4ekKSN67GIAAAG8Gypx33qqrbJPmhJM/dz/IdSXYkyebNm7OwsHAo5tuwtm/fPpf9\nXnDBBXPZLxwqu3fv9vrDmub1f/2r7l7ZilU/nOTp3f19y627devW3rlz58HOxi205Tnn5bIXnjzv\nMWAuFhYWsm3btnmPAXPh9X++qmpXd29dbr2bc9rxiXHKEQDgoKwovqpqU5JHJnnL6o4DALC+reia\nr+7ek+TOqzwLAMC65x3uAQAGEl8AAAOJLwCAgcQXAMBA4gsAYCDxBQAwkPgCABhIfAEADCS+AAAG\nEl8AAAOJLwCAgcQXAMBA4gsAYCDxBQAwkPgCABhIfAEADCS+AAAGEl8AAAOJLwCAgcQXAMBA4gsA\nYCDxBQAwkPgCABhIfAEADCS+AAAGEl8AAAOJLwCAgcQXAMBA4gsAYCDxBQAwkPgCABhIfAEADCS+\nAAAGEl8AAAOJLwCAgcQXAMBA4gsAYCDxBQAwkPgCABhIfAEADCS+AAAGWlF8VdWxVXV2VX2oqi6t\nqu9c7cEAANajI1a43kuSnN/dj6mq2yS5/SrOBACwbi0bX1V1hyQPT/LUJOnuLyT5wuqOBQCwPlV3\nH3iFqhOTnJ7kg0kenGRXkmd095591tuRZEeSbN68+VvOPPPMVRl4rXn63+zJni/Oe4rVtenI5OUn\nbZr3GKwj27dvn8t+L7jggrnsl/Xp1MtPnfcIQ7z0hJfOe4TDxvbt23d199bl1ltJfG1N8p4kD+vu\nC6vqJUmu7+5f299ttm7d2jt37ry5M69LW55zXi574clD97mwsJBt27YN29887iPsj+cjhwuv/xtP\nVa0ovlZywf2VSa7s7gun789O8tCDGQ4AYKNaNr66+1+SXFFV95t+dFJmpyABALiZVvrbjqcmef30\nm44fTfK01RsJAGD9WlF8dfdFSZY9hwkAwIF5h3sAgIHEFwDAQOILAGAg8QUAMJD4AgAYSHwBAAwk\nvgAABhJfAAADiS8AgIHEFwDAQOILAGAg8QUAMJD4AgAYSHwBAAwkvgAABhJfAAADiS8AgIHEFwDA\nQOILAGAg8QUAMJD4AgAYSHwBAAwkvgAABhJfAAADiS8AgIHEFwDAQOILAGAg8QUAMJD4AgAYSHwB\nAAwkvgAABhJfAAADiS8AgIHEFwDAQOILAGAg8QUAMJD4AgAYSHwBAAwkvgAABhJfAAADHbGSlarq\nsiQ3JLkpyZe6e+tqDgUAsF6tKL4m27v76lWbBABgA3DaEQBgoJUe+eokb6uqTvJH3X36vitU1Y4k\nO5Jk8+bNWVhYOGRDrnWjH4vdu3cP36f/3izl6X+zJ3u+OH6/W55z3rB9bToyeflJm4btj7XF6z9L\nWWl8fVd3f7yq7pbkr6vqQ939jsUrTEF2epJs3bq1t23bdmgnXavOPy+jH4uFhYWx+5zDfWRt2HP+\nebnshScP3efo5/+W53j+sx9e/9mPFZ127O6PT39+Msk5Sb5tNYcCAFivlo2vqtpUVcfs/XuS70vy\ngdUeDABgPVrJacfNSc6pqr3rv6G7z1/VqQAA1qll46u7P5rkwQNmAQBY97zVBADAQOILAGAg8QUA\nMJD4AgAYSHwBAAwkvgAABhJfAAADiS8AgIHEFwDAQOILAGAg8QUAMJD4AgAYSHwBAAwkvgAABhJf\nAAADiS8AgIHEFwDAQOILAGAg8QUAMJD4AgAYSHwBAAwkvgAABhJfAAADiS8AgIHEFwDAQOILAGAg\n8QUAMJD4AgAYSHwBAAwkvgAABhJfAAADiS8AgIHEFwDAQOILAGAg8QUAMJD4AgAYSHwBAAwkvgAA\nBhJfAAADiS8AgIFWHF9Vdeuqel9V/cVqDgQAsJ7dnCNfz0hy6WoNAgCwEawovqrqHklOTvLK1R0H\nAGB9q+5efqWqs5P8TpJjkvxSd5+yxDo7kuxIks2bN3/LmWeeeYhHXZtOvfzUeY8wxEtPeOm8R+Aw\n5PnPRvbU8/fMe4RVt+nI5OUnbZr3GIeN7du37+rurcutt2x8VdUpSR7d3f+5qrZlP/G12NatW3vn\nzp03Z14OoS3POS+XvfDkeY8Bc+H5z0bm+T9fVbWi+FrJaceHJfmhqrosyZlJHlFVrzvI+QAANqRl\n46u7n9vd9+juLUmekORvu/snVn0yAIB1yPt8AQAMdMTNWbm7F5IsrMokAAAbgCNfAAADiS8AgIHE\nFwDAQOILAGAg8QUAMJD4AgAYSHwBAAwkvgAABhJfAAADiS8AgIHEFwDAQOILAGAg8QUAMJD4AgAY\nSHwBAAwkvgAABhJfAAADiS8AgIHEFwDAQOILAGAg8QUAMJD4AgAYSHwBAAwkvgAABhJfAAADiS8A\ngIHEFwDAQOILAGAg8QUAMJD4AgAYSHwBAAwkvgAABhJfAAADiS8AgIHEFwDAQOILAGAg8QUAMJD4\nAgAYSHwBAAwkvgAABlo2vqrqtlX1D1V1cVVdUlW/OWIwAID16IgVrHNjkkd09+6qOjLJO6vqr7r7\nPas8GwDAurNsfHV3J9k9fXvk9NWrORQAwHq1kiNfqapbJ9mV5D5JXt7dFy6xzo4kO5Jk8+bNWVhY\nOIRjcnN5/FnLtm/fflC3rxfdsttdcMEFB7VfOBx4/T/8rSi+uvumJCdW1bFJzqmqB3b3B/ZZ5/Qk\npyfJ1q1be9u2bYd6Vlbq/PPi8Wctmx1wv2UWFhY8/9m4vP6vCTfrtx27+7okFyR51OqMAwCwvq3k\ntx3vOh3xSlXdLskjk3xotQcDAFiPVnLa8euTnDFd93WrJGd191+s7lgAAOvTSn7b8f1JHjJgFgCA\ndc873AMADCS+AAAGEl8AAAOJLwCAgcQXAMBA4gsAYCDxBQAwkPgCABhIfAEADCS+AAAGEl8AAAOJ\nLwCAgcQXAMBA4gsAYCDxBQAwkPgCABhIfAEADCS+AAAGEl8AAAOJLwCAgcQXAMBA4gsAYCDxBQAw\nkPgCABhIfAEADCS+AAAGEl8AAAOJLwCAgcQXAMBA4gsAYCDxBQAwkPgCABhIfAEADCS+AAAGEl8A\nAAOJLwCAgcQXAMBA4gsAYCDxBQAwkPgCABho2fiqqntW1QVV9cGquqSqnjFiMACA9eiIFazzpSTP\n6u73VtUxSXZV1V939wdXeTYAgHVn2SNf3f2J7n7v9Pcbklya5O6rPRgAwHq0kiNfX1FVW5I8JMmF\nSyzbkWRHkmzevDkLCwsHPx23mMefjWr37t2e/2xonv+HvxXHV1UdneTNSZ7Z3dfvu7y7T09yepJs\n3bq1t23bdqhm5OY6/7x4/NmoFhYWPP/ZuLz+rwkr+m3Hqjoys/B6fXe/ZXVHAgBYv1by246V5E+S\nXNrdL179kQAA1q+VHPl6WJInJ3lEVV00fT16lecCAFiXlr3mq7vfmaQGzAIAsO55h3sAgIHEFwDA\nQOILAGAg8QUAMJD4AgAYSHwBAAwkvgAABhJfAAADiS8AgIHEFwDAQOILAGAg8QUAMJD4AgAYSHwB\nAAwkvgAABhJfAAADiS8AgIHEFwDAQOILAGAg8QUAMJD4AgAYSHwBAAwkvgAABhJfAAADiS8AgIHE\nFwDAQOILAGAg8QUAMJD4AgAYSHwBAAwkvgAABhJfAAADiS8AgIHEFwDAQOILAGAg8QUAMJD4AgAY\nSHwBAAwkvgAABhJfAAADLRtfVfWqqvpkVX1gxEAAAOvZSo58vTrJo1Z5DgCADWHZ+OrudyS5ZsAs\nAADr3hGHakNVtSPJjiTZvHlzFhYWDtWmN6Tt27cf1O3rRbfsdhdccMFB7Rfmbffu3V5/WNO8/q9/\nhyy+uvv0JKcnydatW3vbtm2HatMbUnff4tsuLCzE489G5fnPWuf1f/3z244AAAOJLwCAgVbyVhNv\nTPLuJPerqiur6qdWfywAgPVp2Wu+uvuJIwYBANgInHYEABhIfAEADCS+AAAGEl8AAAOJLwCAgcQX\nAMBA4gsAYCDxBQAwkPgCABioDubT0/e70apPJbn8kG+YlbpLkqvnPQTMiec/G5nn/3yd0N13XW6l\nVYkv5quqdnb31nnPAfPg+c9G5vm/NjjtCAAwkPgCABhIfK1Pp897AJgjz382Ms//NcA1XwAAAzny\nBQAwkPgCABhIfK1hVXVcVZ1ZVR+pql1V9ZdV9YyqumjR1weqqqvq/vOeFw6lqrppeo5fUlUXV9Wz\nqupW07JtVfWZff5f+N55zwyHyqLn/96v50w/P6Wq3jf9P/HBqvrZec/K1zpi3gNwy1RVJTknyRnd\n/YTpZw9O8nXd/ZJF670gyUXdfel8JoVV87nuPjFJqupuSd6Q5OuS/Pq0/O+6+5R5DQer7CvP/72q\n6sjMLrj/tu6+sqqOSrJlHsNxYOJr7dqe5Ivd/Yq9P+juixevUFUPT/K4JA8dPBsM1d2frKodSf6x\nqn5j3vPAnByT2b/rn06S7r4xyYfnOhFLctpx7Xpgkl37W1hVxyZ5dZKndPf1o4aCeenujya5dZK7\nTT/67n1Oy9x7juPBoXa7fZ7fj+/ua5K8NcnlVfXGqnrS3lPxHF4c+Vq/XpHktd39rnkPAnPitCPr\n2decdkyS7v7pqvrmJN+b5JeSPDLJUwfPxjIU8dp1SZJvWWpBVT0lyQlJfnvoRDBHVXWvJDcl+eS8\nZ4F56u5/6u7fyyy8fmze8/C1xNfa9bdJjpquc0mSVNWDqup7krwgyZO6+0tzmw4Gqqq7Zna092Xt\nnaPZoKrq6KratuhHJya5fE7jcADe4X4Nq6rjk/x+ZkfAPp/ksiS3zewC+33/hzu1u/9u6ICwiqrq\npiT/lOTIJF9K8tokL+7uL0//AP1Zko8tusnzu/vs4YPCKlj0/N/r/CSnJXlTknsn+VySPUme0d07\nx0/IgYgvAICBnHYEABhIfAEADCS+AAAGEl8AAAOJLwCAgcQXsC5U1Zaq+vF5zwGwHPEFrBdbkiwZ\nX1Xlo9SAw4b3+QIOa1X1k5l9Rl0neX9mHyF0fZKtSY5L8svdfXZVvSfJ/TN7Y9Uzklyb5EeTHJ3Z\nB25fnuQt3X3utN3XJzmru/9s7D0CNjrxBRy2quoBSc5J8h+6++qqulOSFyfZlOTxSf59krd2932m\nd7X/pb0fpl1VT03y/CQP6u5rpo/e+i/d/SNVdYckFyW5r4/hAkZz2hE4nD0iyZ9299VJ0t3XTD8/\nt7u/3N0fTLL5ALf/67236e63J7nv9DmQT0zyZuEFzIPrIIC16MZFf68DrLdnn+9fk+QnkjwhydMO\n9VAAK+HIF3A4+9skj62qOyfJdNpxf25Icswy23t1kmcmyXTUDGA4R76Aw1Z3X1JVpyV5e1XdlOR9\nB1j9/UluqqqLM4usa5fY3r9W1aVJzl2NeQFWwgX3wIZRVbdP8k9JHtrdn5n3PMDG5LQjsCFU1fcm\nuTTJS4UXME+OfAEADOTIFwDAQOILAGAg8QUAMJD4AgAYSHwBAAz0/wElQ9r4DWAl5wAAAABJRU5E\nrkJggg==\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "tags": []
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# It appears that not all medians are equal, so\n",
    "# Which one is the odd country out?\n",
    "# I'm thinking DE\n",
    "\n",
    "ess_2014_cz_de_es.boxplot('sclmeet', by='cntry', figsize=(10, 6))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "OfOrG6IWqj9z"
   },
   "source": [
    "\n",
    "### 4. Pick three or four of the countries in the sample and compare how often people took part in social activities, relative to others their age, in 2014. Are there differences, and if so, which countries stand out?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 361
    },
    "id": "qhl84fjQqlTj",
    "outputId": "8ae943d4-b7bd-4983-d843-3723cfc54586"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[<matplotlib.axes._subplots.AxesSubplot object at 0x7f23892c9710>,\n",
       "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f238bbc6518>],\n",
       "       [<matplotlib.axes._subplots.AxesSubplot object at 0x7f23892fe0b8>,\n",
       "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f238936a630>]],\n",
       "      dtype=object)"
      ]
     },
     "execution_count": 11,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\nRU5ErkJggg==\n",
      "text/plain": [
       "<Figure size 432x288 with 4 Axes>"
      ]
     },
     "metadata": {
      "tags": []
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Variable sclact\n",
    "# I will stick with the same countries as above\n",
    "\n",
    "ess_2014_cz_de_es['sclact'].hist(by = ess_2014_cz_de_es['cntry'])\n",
    "\n",
    "# These look a little more normal to me. \n",
    "# At least they are symmetrical.\n",
    "# So let's do a one-way ANOVA.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 34
    },
    "id": "6u6s66zo5zNM",
    "outputId": "b1c42e39-db57-417f-c9e6-5c1f855a3606"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "F_onewayResult(statistic=array([2.28963493]), pvalue=array([0.10160666]))"
      ]
     },
     "execution_count": 12,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "stats.f_oneway(\n",
    "    ess_2014_cz_de_es.loc[ess_2014_cz_de_es['cntry'] == 'CZ',['sclact']],\n",
    "    ess_2014_cz_de_es.loc[ess_2014_cz_de_es['cntry'] == 'DE',['sclact']],\n",
    "    ess_2014_cz_de_es.loc[ess_2014_cz_de_es['cntry'] == 'ES',['sclact']])\n",
    "\n",
    "# No significant difference in groups.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 120
    },
    "id": "siEXlBhWHm3C",
    "outputId": "213a306b-ba0b-42c9-f9fd-2f7d81c86473"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>Multiple Comparison of Means - Tukey HSD, FWER=0.05</caption>\n",
       "<tr>\n",
       "  <th>group1</th> <th>group2</th> <th>meandiff</th>  <th>p-adj</th>  <th>lower</th>   <th>upper</th> <th>reject</th>\n",
       "</tr>\n",
       "<tr>\n",
       "    <td>CZ</td>     <td>DE</td>    <td>-0.0151</td>   <td>0.9</td>  <td>-0.5946</td> <td>0.5644</td>  <td>False</td>\n",
       "</tr>\n",
       "<tr>\n",
       "    <td>CZ</td>     <td>ES</td>    <td>-0.098</td>  <td>0.0841</td> <td>-0.2058</td> <td>0.0099</td>  <td>False</td>\n",
       "</tr>\n",
       "<tr>\n",
       "    <td>DE</td>     <td>ES</td>    <td>-0.0829</td>   <td>0.9</td>  <td>-0.6594</td> <td>0.4936</td>  <td>False</td>\n",
       "</tr>\n",
       "</table>"
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.table.SimpleTable'>"
      ]
     },
     "execution_count": 13,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Let's check pairwise statistics with Tukey's HSD.\n",
    "\n",
    "from statsmodels.stats.multicomp import pairwise_tukeyhsd\n",
    "\n",
    "tukey = pairwise_tukeyhsd(endog = ess_2014_cz_de_es['sclact'],      # Data\n",
    "                          groups = ess_2014_cz_de_es['cntry'],   # Groups\n",
    "                          alpha=0.05) \n",
    "\n",
    "\n",
    "tukey.summary()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "L2CNR5Yd9_IF"
   },
   "source": [
    "# Ruff Figural Fluency Test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 204
    },
    "id": "yQdaAVMJ-u6m",
    "outputId": "c4907f06-4883-412b-eff1-64101d547957"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Casenr</th>\n",
       "      <th>Age</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Education</th>\n",
       "      <th>Measurement</th>\n",
       "      <th>Unique</th>\n",
       "      <th>Perseverative</th>\n",
       "      <th>Interval</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>74</td>\n",
       "      <td>Male</td>\n",
       "      <td>Lower secondary school (ISCED 2)</td>\n",
       "      <td>Measurement 1 (2003-2006)</td>\n",
       "      <td>32.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Not applicable</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>74</td>\n",
       "      <td>Male</td>\n",
       "      <td>Lower secondary school (ISCED 2)</td>\n",
       "      <td>Measurement 2 (2006-2008)</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.842122556</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>74</td>\n",
       "      <td>Male</td>\n",
       "      <td>Lower secondary school (ISCED 2)</td>\n",
       "      <td>Measurement 3 (2008-2012)</td>\n",
       "      <td>50.5</td>\n",
       "      <td>14.5</td>\n",
       "      <td>2.201232033</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2</td>\n",
       "      <td>48</td>\n",
       "      <td>Male</td>\n",
       "      <td>Higher secondary school (ISCED 3-4)</td>\n",
       "      <td>Measurement 1 (2003-2006)</td>\n",
       "      <td>26.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>Not applicable</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2</td>\n",
       "      <td>48</td>\n",
       "      <td>Male</td>\n",
       "      <td>Higher secondary school (ISCED 3-4)</td>\n",
       "      <td>Measurement 2 (2006-2008)</td>\n",
       "      <td>47.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>2.762718362</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Casenr  Age Gender  ... Unique Perseverative        Interval\n",
       "0       1   74   Male  ...   32.0           1.0  Not applicable\n",
       "1       1   74   Male  ...   35.0           0.0     2.842122556\n",
       "2       1   74   Male  ...   50.5          14.5     2.201232033\n",
       "3       2   48   Male  ...   26.0           3.0  Not applicable\n",
       "4       2   48   Male  ...   47.0           3.0     2.762718362\n",
       "\n",
       "[5 rows x 8 columns]"
      ]
     },
     "execution_count": 1,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# https://www.parinc.com/Products/Pkey/360\n",
    "# https://datadryad.org/resource/doi:10.5061/dryad.rr138\n",
    "\n",
    "%matplotlib inline\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy import stats\n",
    "\n",
    "rfft = pd.read_csv(\"https://tf-assets-prod.s3.amazonaws.com/tf-curric/data-science/rfft.csv\")\n",
    "rfft.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "AMqQOgU5H7Xm"
   },
   "source": [
    "## 1. Is there a significant difference in the number of unique designs drawn by the same participants from Measurement 2 to Measurement 3?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 235
    },
    "id": "W2lgWIjY-5b6",
    "outputId": "5887adf4-0ff7-4460-9cfb-3d52e165a3c7"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>Measurement</th>\n",
       "      <th>Measurement 1 (2003-2006)</th>\n",
       "      <th>Measurement 2 (2006-2008)</th>\n",
       "      <th>Measurement 3 (2008-2012)</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Casenr</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>32.0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>50.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>26.0</td>\n",
       "      <td>47.0</td>\n",
       "      <td>71.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>91.0</td>\n",
       "      <td>83.5</td>\n",
       "      <td>77.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>59.0</td>\n",
       "      <td>54.0</td>\n",
       "      <td>64.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>60.0</td>\n",
       "      <td>68.0</td>\n",
       "      <td>21.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Measurement  Measurement 1 (2003-2006)  ...  Measurement 3 (2008-2012)\n",
       "Casenr                                  ...                           \n",
       "1                                 32.0  ...                       50.5\n",
       "2                                 26.0  ...                       71.0\n",
       "3                                 91.0  ...                       77.0\n",
       "4                                 59.0  ...                       64.0\n",
       "5                                 60.0  ...                       21.0\n",
       "\n",
       "[5 rows x 3 columns]"
      ]
     },
     "execution_count": 15,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# To ease in our analysis let's pivot the data.\n",
    "\n",
    "rfft_unique = rfft.pivot(index='Casenr', columns='Measurement', values='Unique')\n",
    "rfft_unique.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 306
    },
    "id": "RhzkhevA-8lq",
    "outputId": "214e2eb8-f122-419e-ff8a-56cb42987399"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "DescribeResult(nobs=2515, minmax=(-75.5, 68.5), mean=4.015506958250497, variance=342.2368318331855, skewness=-0.15837265462838976, kurtosis=0.7823714353134701)\n"
     ]
    },
    {
     "data": {
      "image/png": "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\ngg==\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "tags": []
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# The differences appear normally distributed.\n",
    "# So we ill use a paired t-test.\n",
    "\n",
    "plt.hist(rfft_unique['Measurement 3 (2008-2012)'] - rfft_unique['Measurement 2 (2006-2008)'])\n",
    "print(stats.describe(rfft_unique['Measurement 3 (2008-2012)'] - rfft_unique['Measurement 2 (2006-2008)']))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 34
    },
    "id": "0Eoq4c_b_AAk",
    "outputId": "bec4846a-78d0-4220-e988-b734eebb8ef0"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Ttest_relResult(statistic=10.88544039426271, pvalue=5.3585747477799544e-27)"
      ]
     },
     "execution_count": 17,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "stats.ttest_rel(rfft_unique['Measurement 3 (2008-2012)'], rfft_unique['Measurement 2 (2006-2008)'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "pmCX12dKIrdg"
   },
   "source": [
    "Yes, there appears to be a significant difference between unique designs by the same participants between Measurements 2 and 3."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "gKMHKgRNI65s"
   },
   "source": [
    "## 2. Is there a significant difference in the number of perseverative errors drawn by the same participants from Measurement 2 to Measurement 3?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 235
    },
    "id": "lAAKBr-k_AdK",
    "outputId": "30e4d288-605c-406d-b13c-2ee53a35644e"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>Measurement</th>\n",
       "      <th>Measurement 1 (2003-2006)</th>\n",
       "      <th>Measurement 2 (2006-2008)</th>\n",
       "      <th>Measurement 3 (2008-2012)</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Casenr</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>14.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>11.0</td>\n",
       "      <td>21.0</td>\n",
       "      <td>17.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>49.0</td>\n",
       "      <td>39.0</td>\n",
       "      <td>11.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>14.0</td>\n",
       "      <td>16.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Measurement  Measurement 1 (2003-2006)  ...  Measurement 3 (2008-2012)\n",
       "Casenr                                  ...                           \n",
       "1                                  1.0  ...                       14.5\n",
       "2                                  3.0  ...                        0.5\n",
       "3                                 11.0  ...                       17.0\n",
       "4                                 49.0  ...                       11.0\n",
       "5                                 14.0  ...                        0.0\n",
       "\n",
       "[5 rows x 3 columns]"
      ]
     },
     "execution_count": 18,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Again, let's pivot the data\n",
    "\n",
    "rfft_persev = rfft.pivot(index='Casenr', columns='Measurement', values='Perseverative')\n",
    "rfft_persev.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 354
    },
    "id": "SXv1xrjf_JDo",
    "outputId": "f871b728-ddeb-4044-ed1e-f28732ae1e24"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([1.821e+03, 4.560e+02, 1.210e+02, 5.200e+01, 2.800e+01, 1.600e+01,\n",
       "        1.300e+01, 3.000e+00, 4.000e+00, 1.000e+00]),\n",
       " array([  0.  ,  13.35,  26.7 ,  40.05,  53.4 ,  66.75,  80.1 ,  93.45,\n",
       "        106.8 , 120.15, 133.5 ]),\n",
       " <a list of 10 Patch objects>)"
      ]
     },
     "execution_count": 19,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\nQAMYAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "tags": []
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Looks quite non-normal, so we'll use Wilcoxon\n",
    "\n",
    "plt.hist(rfft_persev['Measurement 3 (2008-2012)'], alpha = .5)\n",
    "plt.hist(rfft_persev['Measurement 2 (2006-2008)'], alpha = .5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 34
    },
    "id": "I-D8hz-A_GRi",
    "outputId": "7ccdf34d-ee8b-4fa5-9d9f-891db3decefe"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "WilcoxonResult(statistic=1358373.0, pvalue=0.0006927535563546565)"
      ]
     },
     "execution_count": 20,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Reject the null, there is a significant difference between perseverative errors\n",
    "# from the same participants at Measurements 2 and 3\n",
    "\n",
    "stats.wilcoxon(rfft_persev['Measurement 3 (2008-2012)'], rfft_persev['Measurement 2 (2006-2008)'])"
   ]
  }
 ],
 "metadata": {
  "colab": {
   "provenance": []
  },
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
